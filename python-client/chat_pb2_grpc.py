# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import chat_pb2 as chat__pb2


class ChatStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.realTimeChat = channel.stream_stream(
        '/chat.Chat/realTimeChat',
        request_serializer=chat__pb2.UserMessage.SerializeToString,
        response_deserializer=chat__pb2.UserMessage.FromString,
        )
    self.listUserMessages = channel.unary_stream(
        '/chat.Chat/listUserMessages',
        request_serializer=chat__pb2.ListMessagesRequest.SerializeToString,
        response_deserializer=chat__pb2.UserMessage.FromString,
        )


class ChatServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def realTimeChat(self, request_iterator, context):
    """Bidrectional streaming rpc to allow chat between client and server
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def listUserMessages(self, request, context):
    """Client side streaming rpc to allow user to fetch messages from the server
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ChatServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'realTimeChat': grpc.stream_stream_rpc_method_handler(
          servicer.realTimeChat,
          request_deserializer=chat__pb2.UserMessage.FromString,
          response_serializer=chat__pb2.UserMessage.SerializeToString,
      ),
      'listUserMessages': grpc.unary_stream_rpc_method_handler(
          servicer.listUserMessages,
          request_deserializer=chat__pb2.ListMessagesRequest.FromString,
          response_serializer=chat__pb2.UserMessage.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'chat.Chat', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
